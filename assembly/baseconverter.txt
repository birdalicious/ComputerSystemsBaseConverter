#Base Converter by Jack Bird
#
#When running not in a batch process I would recommend
#queuing the inputs as the third input is asked for half
#way through the running time
#
#Features
# -Convert into base 10
# -Convert from base 10
# -Convert between bases
#
#Error Handling
# -Overflow (888,9,8;999)
# -Invalid Numbers (532,4,10;999)
# -Bases 0 and 1 are invalid (123,1,10;999)
# -0 as output base is invalid to stop infinite loop
# -Bases greater than 10 are invalid as there is no
#  guarantee of a correct answer (888,11,12;999)
#
#Running states


	LDA	s1
	STO	state
	LDA	s10
	STO	b

	IN
	STO	x
	IN
	STO	a
repeat	BRZ	error
	SUB	s11
	BRP	error
	
	LDA	s0
	STO	q
#split x into its digits
di1	LDA	x
	SUB	b
	BRP	ds1
	LDA	x
	STO	d3
	SUB	a
	BRP	error
	LDA	s0
	STO	x
di2	LDA	q
	SUB	b
	BRP	ds2
	LDA	q
	STO	d2
	SUB	a
	BRP	error
	
	LDA	x
	SUB	a
	BRP	error
#overflow check
	LDA	x
	SUB	b
	BRP	error

#digits stored as x,d2,d3
	LDA	s0
	STO	b
	LDA	a
m1	STO	q
	BRZ	ms1
	LDA	b
	ADD	x
	STO	b
	LDA	q
	SUB	s1
	BR	m1
ms1	LDA	b
	ADD	d2
	STO	b
	LDA	a
m2	STO	x
	BRZ	ms2
	LDA	q
	ADD	b
	STO	q
	LDA	x
	SUB	s1
	BR	m2
ms2	LDA	q
	ADD	d3
	STO	x
	
	LDA	state
	SUB	s1
	STO	state
	BRP	prep
	LDA	x
	OUT
s0	DAT	0	
prep	LDA	s10
	STO	a
	IN	
	STO	b
	BR	repeat
	
ds2	STO	q
	LDA	x
	ADD	s1
	STO	x
	BR	di2	

ds1	STO	x
	LDA	q
	ADD	s1
	STO	q
	BR	di1

error	LDA	s999
	OUT

#data
state	DAT

x	DAT
a	DAT
b	DAT

d2	DAT
d3	DAT

q	DAT

s1	DAT	1
s10	DAT	10
s11	DAT	11
s999	DAT	999
























